{"version":3,"sources":["Photos/camera.png","Photos/Arnold.png","Photos/monkey.png","Photos/wonder.png","Photos/coraje.png","Photos/harry.png","App.js","reportWebVitals.js","index.js"],"names":["App","useState","movie","setMovie","name","setName","className","onSubmit","e","preventDefault","axios","then","response","data","Search","console","log","window","location","href","catch","error","type","onChange","target","value","class","disabled","length","src","Camera","alt","Arnold","atl","monkey","wonder","coraje","harry","id","map","Title","Year","Type","Poster","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oOAAe,G,MAAA,IAA0B,oCCA1B,MAA0B,mCCA1B,MAA0B,mCCA1B,MAA0B,mCCA1B,MAA0B,mCCA1B,MAA0B,kCCwH1BA,MA7Gf,WAAgB,IAAD,EACaC,mBAAS,IADtB,mBACNC,EADM,KACCC,EADD,OAEWF,mBAAS,IAFpB,mBAENG,EAFM,KAEAC,EAFA,KA2Db,OACE,qCACE,sBAAKC,UAAU,QAAf,UACE,8BACE,8CAIF,sBAAKA,UAAU,MAAf,UACE,8BACE,uBAAMA,UAAU,OAAOC,SA5DjC,SAAsBC,GACpBA,EAAEC,iBACFC,IAAM,CACJ,OAAU,MACV,IAAO,0DACP,QAAW,CACT,eAAgB,2BAChB,kBAAmB,iDACnB,iBAAkB,qDAClB,gBAAkB,GACjB,OAAU,CACX,KAAQ,IACR,EAAK,OACL,EAAI,GAAJ,OAAQN,MAGTO,MAAK,SAACC,GACLT,EAASS,EAASC,KAAKC,QACvBC,QAAQC,IAAIJ,EAASC,MACrBI,OAAOC,SAASC,KAAO,WAExBC,OAAM,SAACC,GACNN,QAAQC,IAAIK,OAsCR,UACE,sDACA,uBAAOC,KAAK,OAAOhB,UAAU,gCAAgCiB,SAlEzE,SAAsBf,GACpBH,EAAQG,EAAEgB,OAAOC,UAkEP,wBAAQC,MAAM,cAAcC,SAAUvB,EAAKwB,OAAO,EAAGN,KAAK,SAA1D,SAAmE,iDAIvE,8BACE,qBAAKhB,UAAU,SAASuB,IAAKC,EAAQC,IAAI,yBAK7C,gCACE,qBAAKzB,UAAU,OAAOuB,IAAKG,EAAQC,IAAI,sBACvC,qBAAK3B,UAAU,OAAOuB,IAAKK,EAAQD,IAAI,sBACvC,qBAAK3B,UAAU,OAAOuB,IAAKM,EAAQF,IAAI,sBACvC,qBAAK3B,UAAU,OAAOuB,IAAKO,EAAQH,IAAI,sBACvC,qBAAK3B,UAAU,OAAOuB,IAAKQ,EAAOJ,IAAI,4BAO1C,qBAAKP,MAAM,YAAYY,GAAG,OAA1B,SAEE,qBAAKZ,MAAM,sCAAX,SAzDGxB,EAAMqC,KAAI,YAAoC,IAAjCC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,KAAMC,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,OACrC,OAEE,mCACE,sBAAKjB,MAAM,gBAAX,UACE,qBAAKG,IAAKc,EAAQrC,UAAU,QAAQyB,IAAI,qBACxC,sBAAKL,MAAM,8BAAX,UACE,6BAAKc,IACL,mBAAGd,MAAM,cAAT,SAAwBe,IACxB,mBAAGf,MAAM,cAAT,SAAwBgB,uBC/CvBE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBnC,MAAK,YAAkD,IAA/CoC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.f6ac9cd5.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/camera.e3412a1d.png\";","export default __webpack_public_path__ + \"static/media/Arnold.4209ed7a.png\";","export default __webpack_public_path__ + \"static/media/monkey.12c2f1fd.png\";","export default __webpack_public_path__ + \"static/media/wonder.4dd453e3.png\";","export default __webpack_public_path__ + \"static/media/coraje.cb4a9b7d.png\";","export default __webpack_public_path__ + \"static/media/harry.e9e491ca.png\";","import React, { useState } from 'react'\nimport axios from 'axios';\nimport './App.css';\n\nimport Camera from './Photos/camera.png'\nimport Arnold from './Photos/Arnold.png'\nimport monkey from './Photos/monkey.png'\nimport wonder from './Photos/wonder.png'\nimport coraje from './Photos/coraje.png'\nimport harry from './Photos/harry.png'\n\nfunction App() {\n  const [movie, setMovie] = useState([])\n  const [name, setName] = useState('')\n\n\n  function onNameChange(e) { //read the label in the html\n    setName(e.target.value)\n  };\n\n  function handleSubmit(e) { //read the data\n    e.preventDefault();\n    axios({\n      \"method\": \"GET\",\n      \"url\": \"https://movie-database-imdb-alternative.p.rapidapi.com/\",\n      \"headers\": {\n        \"content-type\": \"application/octet-stream\",\n        \"x-rapidapi-host\": \"movie-database-imdb-alternative.p.rapidapi.com\",\n        \"x-rapidapi-key\": \"00b4989841msh6f66d81551f861cp141a21jsn826d038ef1fe\",\n        \"useQueryString\": true\n      }, \"params\": {\n        \"page\": \"1\",\n        \"r\": \"json\",\n        \"s\": `${name}`\n      }\n    })\n      .then((response) => {\n        setMovie(response.data.Search)\n        console.log(response.data)\n        window.location.href = '#data'\n      })\n      .catch((error) => {\n        console.log(error)\n      })\n\n  }\n\n\n\n  const renderBody = () => {\n    return movie.map(({ Title, Year, Type, Poster }) => {\n      return (\n\n        <>\n          <div class=\"advisor_thumb\">\n            <img src={Poster} className=\"photo\" alt=\"Foto de pelicula\" />\n            <div class=\"single_advisor_details_info\">\n              <h4>{Title}</h4>\n              <p class=\"designation\">{Year}</p>\n              <p class=\"designation\">{Type}</p>\n            </div>\n          </div>\n\n\n        </>\n\n      )\n    })\n  }\n\n  return (\n    <>\n      <div className=\"Title\">\n        <div>\n          <h1>Movie Data</h1>\n        </div>\n\n\n        <div className=\"App\">\n          <div>\n            <form className=\"form\" onSubmit={handleSubmit}>\n              <h3>Nombre de pelicula: </h3>\n              <input type=\"text\" className=\"browser-default custom-select\" onChange={onNameChange} />\n              <button class=\"btn btn-one\" disabled={name.length<1} type=\"submit\"><span>Buscar</span></button>\n            </form>\n          </div>\n\n          <div>\n            <img className=\"camera\" src={Camera} alt=\"rollo de camara\" />\n          </div>\n        </div>\n\n\n        <div>\n          <img className=\"clip\" src={Arnold} atl=\"foto de personaje\" />\n          <img className=\"clip\" src={monkey} atl=\"foto de personaje\" />\n          <img className=\"clip\" src={wonder} atl=\"foto de personaje\" />\n          <img className=\"clip\" src={coraje} atl=\"foto de personaje\" />\n          <img className=\"clip\" src={harry} atl=\"foto de personaje\" />\n        </div>\n\n      </div>\n\n\n\n      <div class=\"container\" id=\"data\">\n\n        <div class=\"single_advisor_profile wow fadeInUp\">\n          {renderBody()}\n\n        </div>\n\n      </div>\n\n\n    </>\n  );\n}\n\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}